From d304c8b4ce9204a1dc62aba88e69cc12448afa98 Mon Sep 17 00:00:00 2001
From: Nehal J Wani <nehaljw.kkd1@gmail.com>
Date: Mon, 3 Feb 2020 07:09:16 -0500
Subject: [PATCH] Prefer SO_REUSEPORT over uv.SO_REUSEPORT

uv.SO_REUSEPORT translates to the macro SO_REUSEPORT (see socket(7)).
Although it was introduced in linux 3.9, it was backported by Redhat
folks to linux 2.6.32. Unfortunately, the Anaconda pseudo cross GCC
compilers use the vanilla linux 2.6.32 and not the one with the Redhat
backports. This patch replaces uv.SO_REUSEPORT with SO_REUSEPORT, which
is computed beforehand with:

    def int SO_REUSEPORT = getattr(socket, 'SO_REUSEPORT', 0)
---
 uvloop/loop.pyx | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/uvloop/loop.pyx b/uvloop/loop.pyx
index c865fed..055c01f 100644
--- a/uvloop/loop.pyx
+++ b/uvloop/loop.pyx
@@ -1712,7 +1712,7 @@ cdef class Loop:
                         if reuse_address:
                             sock.setsockopt(uv.SOL_SOCKET, uv.SO_REUSEADDR, 1)
                         if reuse_port:
-                            sock.setsockopt(uv.SOL_SOCKET, uv.SO_REUSEPORT, 1)
+                            sock.setsockopt(uv.SOL_SOCKET, SO_REUSEPORT, 1)
                         # Disable IPv4/IPv6 dual stack support (enabled by
                         # default on Linux) which makes a single socket
                         # listen on both address families.
-- 
2.21.0

